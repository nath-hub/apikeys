{
    "openapi": "3.0.0",
    "info": {
        "title": "Service API",
        "description": "API de gestion des utilisateurs",
        "contact": {
            "email": "n.taffot@elyft.tech"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/apikeys/api-usage-logs": {
            "get": {
                "tags": [
                    "API Usage Logs"
                ],
                "summary": "Lister les journaux d'utilisation API",
                "description": "Retourne une liste paginée des logs API",
                "operationId": "43bf1df97aec3c8deeb7993f5ba5a1ac",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page de pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Nombre d’éléments par page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des journaux",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "links": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé"
                    }
                }
            },
            "post": {
                "tags": [
                    "API Usage Logs"
                ],
                "summary": "Créer un journal d’utilisation d’API",
                "description": "Enregistre les détails d'une requête API pour analyse ou audit.",
                "operationId": "063a4bacf78be674e4b92f0d8e97fd09",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "public_key_id",
                                    "private_key_id",
                                    "http_method",
                                    "ip_address",
                                    "environment",
                                    "status"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "550e8400-e29b-41d4-a716-446655440000"
                                    },
                                    "public_key_id": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "pk_live_1234"
                                    },
                                    "private_key_id": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "sk_live_1234"
                                    },
                                    "action": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "create_payment"
                                    },
                                    "endpoint": {
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "/api/payments"
                                    },
                                    "http_method": {
                                        "type": "string",
                                        "enum": [
                                            "GET",
                                            "POST",
                                            "PUT",
                                            "DELETE",
                                            "PATCH",
                                            "OPTIONS",
                                            "HEAD"
                                        ],
                                        "example": "POST"
                                    },
                                    "request_uuid": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "request_id": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "req_987654321"
                                    },
                                    "ip_address": {
                                        "type": "string",
                                        "format": "ipv4",
                                        "example": "102.244.123.1"
                                    },
                                    "user_agent": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "PostmanRuntime/7.31.1"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "maxLength": 5,
                                        "example": "CM"
                                    },
                                    "environment": {
                                        "type": "string",
                                        "enum": [
                                            "test",
                                            "live",
                                            "sandbox"
                                        ],
                                        "example": "live"
                                    },
                                    "response_time_ms": {
                                        "type": "integer",
                                        "maximum": 300000,
                                        "minimum": 0,
                                        "example": 240
                                    },
                                    "response_status_code": {
                                        "type": "integer",
                                        "maximum": 599,
                                        "minimum": 100,
                                        "example": 200
                                    },
                                    "request_size_bytes": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 512
                                    },
                                    "response_size_bytes": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 2048
                                    },
                                    "signature_valid": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "source_service": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "payment_service"
                                    },
                                    "request_headers": {
                                        "type": "object",
                                        "example": {
                                            "Authorization": "Bearer sk_live_xxx"
                                        }
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 999999999.99,
                                        "minimum": 0,
                                        "example": 10000.5
                                    },
                                    "currency": {
                                        "type": "string",
                                        "maxLength": 3,
                                        "example": "XAF"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "failed",
                                            "blocked",
                                            "rate_limited"
                                        ],
                                        "example": "success"
                                    },
                                    "is_suspicious": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "error_message": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Invalid signature"
                                    },
                                    "error_code": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "401"
                                    },
                                    "city": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Yaoundé"
                                    },
                                    "region": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Centre"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 90,
                                        "minimum": -90,
                                        "example": 3.848
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 180,
                                        "minimum": -180,
                                        "example": 11.5021
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Journal enregistré avec succès"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Requête invalide"
                    },
                    "401": {
                        "description": "Non autorisé"
                    },
                    "422": {
                        "description": "Erreur de validation"
                    },
                    "500": {
                        "description": "Erreur interne du serveur"
                    }
                }
            }
        },
        "/apikeys/api-usage-logs/{log}": {
            "get": {
                "tags": [
                    "API Usage Logs"
                ],
                "summary": "Afficher un journal d’usage",
                "operationId": "ca553a37386860cde76197072944da62",
                "parameters": [
                    {
                        "name": "log",
                        "in": "path",
                        "description": "ID du log",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "f4d6eb57-45f8-4b89-9d12-cae4c56877f4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails du journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Non trouvé"
                    }
                }
            }
        },
        "/api/apikeys": {
            "get": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Lister les clés API de l'utilisateur",
                "description": "Récupère toutes les clés API de l'utilisateur connecté (sans les valeurs des clés privées)",
                "operationId": "4e165990a4e590904b4fd056807a11f2",
                "parameters": [
                    {
                        "name": "environment",
                        "in": "query",
                        "description": "Filtrer par environnement",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "test",
                                "live",
                                "sandbox"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filtrer par statut",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "revoked",
                                "expired"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des clés API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clés API récupérées"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "key_id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "key_type": {
                                                        "type": "string"
                                                    },
                                                    "environment": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "last_used_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "usage_count": {
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "masked_key": {
                                                        "type": "string",
                                                        "example": "pk_test_****...****3456"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/apikeys/generate": {
            "post": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Créer une nouvelle paire de clés API",
                "description": "Génère une paire de clés API (publique/privée) pour l'utilisateur connecté. Les clés sont envoyées par email et retournées dans la réponse (une seule fois).",
                "operationId": "9bdc52d7fe2d23b71c8b2a7684e4b0d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Clés de production"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Clés pour le site e-commerce principal"
                                    },
                                    "environment": {
                                        "type": "string",
                                        "enum": [
                                            "test",
                                            "live",
                                            "sandbox"
                                        ],
                                        "example": "test"
                                    },
                                    "permissions": {
                                        "properties": {
                                            "payments": {
                                                "properties": {
                                                    "create": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "read": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "cancel": {
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "limits": {
                                                "properties": {
                                                    "max_amount_per_transaction": {
                                                        "type": "integer",
                                                        "example": 50000
                                                    },
                                                    "max_amount_per_day": {
                                                        "type": "integer",
                                                        "example": 500000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ip_whitelist": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "192.168.1.1",
                                            "10.0.0.0/24"
                                        ]
                                    },
                                    "entreprise_id": {
                                        "type": "uuid",
                                        "example": "123e4567-e89b-12d3-a456-426614174000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Clés API créées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clés API créées avec succès"
                                        },
                                        "data": {
                                            "properties": {
                                                "public_key": {
                                                    "type": "string",
                                                    "example": "example_keys"
                                                },
                                                "private_key": {
                                                    "type": "string",
                                                    "example": "example_keys"
                                                },
                                                "environment": {
                                                    "type": "string",
                                                    "example": "test"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "warning": {
                                            "type": "string",
                                            "example": "⚠️ IMPORTANT: Votre clé privée ne sera plus jamais affichée. Sauvegardez-la maintenant !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreur de validation"
                    },
                    "401": {
                        "description": "Non authentifié"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/apikeys/{id}/delete": {
            "delete": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Révoquer une clé API",
                "description": "Révoque définitivement une clé API. Cette action est irréversible.",
                "operationId": "ee4c046adc529e4b50b1caf203194add",
                "parameters": [
                    {
                        "name": "keyId",
                        "in": "path",
                        "description": "ID de la clé API à révoquer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "example": "Clé compromise"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Clé API révoquée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clé API révoquée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Clé API non trouvée"
                    },
                    "403": {
                        "description": "Non autorisé à révoquer cette clé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "API Keys",
            "description": "Gestion des clés API pour l'authentification"
        },
        {
            "name": "API Usage Logs",
            "description": "API Usage Logs"
        }
    ]
}